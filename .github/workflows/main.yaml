name: deploy_Node_js_app_on_EKS

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Install Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.1.0

      # Initialize Terraform
      - name: Terraform Init
        run: terraform init
        working-directory: terraform/

      # Apply Terraform configuration to provision EKS cluster
      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: terraform/

      - name: Install kubectl
        uses: azure/setup-kubectl@v2.0
        with:
          version: 'v1.24.0' 
        id: install

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: anan-repo
          IMAGE_TAG: 1.5
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

      # Update kube config after EKS cluster is provisioned
      - name: Update kube config
        run: aws eks update-kubeconfig --name anan-eks 

      # Apply deployment YAML files
      - name: Deploy to EKS
        run: |
          kubectl apply -f deploy.yml
          kubectl apply -f serv.yml
